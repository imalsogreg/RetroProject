*** /home/greghale/Downloads/plot2svg.m	2012-09-15 12:16:58.000000000 -0400
--- /home/greghale/Programming/others_analysis_code/plot2svg_20120915/plot2svg.m	2013-03-22 19:58:13.957152522 -0400
***************
*** 29,35 ****
  %               Clipping
  %               Minor tick marks
  %  22.01.2005 - Removed unused 'end'
! %  29.10.2006 - Bugfix '°','±','µ','²','³','¼''½','¾','©''®'
  %  17-04-2007 - Bugfix 'projection' in hggroup and hgtransform
  %  27-01-2008 - Added Octave functionality (thanks to Jakob Malm)
  %               Bugfixe cdatamapping (thanks to Tom)
--- 29,35 ----
  %               Clipping
  %               Minor tick marks
  %  22.01.2005 - Removed unused 'end'
! %  29.10.2006 - Bugfix 'ï¿½','ï¿½','ï¿½','ï¿½','ï¿½','ï¿½''ï¿½','ï¿½','ï¿½''ï¿½'
  %  17-04-2007 - Bugfix 'projection' in hggroup and hgtransform
  %  27-01-2008 - Added Octave functionality (thanks to Jakob Malm)
  %               Bugfixe cdatamapping (thanks to Tom)
***************
*** 90,97 ****
  %             - Tiny optimization of the grid display at axis borders
  %  25-08-2011 - Fix for degree character (thanks to Manes Recheis)
  %             - Fix for problems with dash-arrays in Inkscape (thanks to
! %               Rüdiger Stirnberg)
! %             - Modified shape of driangles (thanks to Rüdiger Stirnberg)
  %  22-10-2011 - Removed versn as return value of function fileparts (thanks
  %               to Andrew Scott)
  %             - Fix for images (thanks to Roeland)
--- 90,97 ----
  %             - Tiny optimization of the grid display at axis borders
  %  25-08-2011 - Fix for degree character (thanks to Manes Recheis)
  %             - Fix for problems with dash-arrays in Inkscape (thanks to
! %               Rï¿½diger Stirnberg)
! %             - Modified shape of driangles (thanks to Rï¿½diger Stirnberg)
  %  22-10-2011 - Removed versn as return value of function fileparts (thanks
  %               to Andrew Scott)
  %             - Fix for images (thanks to Roeland)
***************
*** 2075,2089 ****
          group=axchild2svg(fid,id,axIdString,ax,group,paperpos,get(axchild(i), 'Children'),axpos,groupax,projection,boundingBoxAxes);
          fprintf(fid, '</g>');
      elseif strcmp(get(axchild(i),'Type'), 'hgtransform')
          if strcmpi(get(axchild(i), 'Visible'), 'on')
              [filterString, boundingBox] = filter2svg(fid, axchild(i), boundingBoxAxes, boundingBoxAxes);
              if strcmp(get(axchild(i),'Clipping'),'on')
                  clippingIdString = clipping2svg(fid, axchild(i), ax, paperpos, axpos, projection, axIdString);
!                 fprintf(fid,'<g id="%s" clip-path="url(#%s)" %s>\n', createId, clippingIdString, filterString);
              else
!                 fprintf(fid, '<g id="%s" %s>', createId, filterString);
              end
              if ~isempty(filterString)
                  % Workaround for Inkscape filter bug
                  fprintf(fid,'<rect x="%0.3f" y="%0.3f" width="%0.3f" height="%0.3f" fill="none" stroke="none" />\n', boundingBox(1), boundingBox(2), boundingBox(3), boundingBox(4));
              end
--- 2075,2099 ----
          group=axchild2svg(fid,id,axIdString,ax,group,paperpos,get(axchild(i), 'Children'),axpos,groupax,projection,boundingBoxAxes);
          fprintf(fid, '</g>');
      elseif strcmp(get(axchild(i),'Type'), 'hgtransform')
+         [x_rel,y_rel,z_rel]          = project(0,0,0, projection);
+         [x_unit_r,y_unit_r,z_unit_r] = project(1,1,1, projection);
+         x_origin = (x_rel*axpos(3) + axpos(1)) * paperpos(3);
+         y_origin = (1-(y_rel*axpos(4) + axpos(2))) * paperpos(4);
+         x_unit = ((x_unit_r-x_rel)*axpos(3)) * paperpos(3);
+         y_unit = ((y_unit_r-y_rel)*axpos(4)) * paperpos(4);
+         t_tag = transTagOfMatrix(get(axchild(i),'Matrix'), x_origin, y_origin, x_unit, y_unit)
          if strcmpi(get(axchild(i), 'Visible'), 'on')
              [filterString, boundingBox] = filter2svg(fid, axchild(i), boundingBoxAxes, boundingBoxAxes);
              if strcmp(get(axchild(i),'Clipping'),'on')
+                 disp('Clipping'); % GREG
                  clippingIdString = clipping2svg(fid, axchild(i), ax, paperpos, axpos, projection, axIdString);
!                 fprintf(fid,'<g id="%s" clip-path="url(#%s)" %s %s>\n', createId, clippingIdString, t_tag, filterString);
              else
!                 disp('Not clipping'); % GREG
!                 fprintf(fid, '<g id="%s" %s %s>', createId, t_tag, filterString);
              end
              if ~isempty(filterString)
+                 disp('Nonempty filterString'); % GREG
                  % Workaround for Inkscape filter bug
                  fprintf(fid,'<rect x="%0.3f" y="%0.3f" width="%0.3f" height="%0.3f" fill="none" stroke="none" />\n', boundingBox(1), boundingBox(2), boundingBox(3), boundingBox(4));
              end
***************
*** 2887,2969 ****
      StringText=strrep(StringText,'>','&gt;');
      StringText=strrep(StringText,'"','&quot;');
      % Workaround for Firefox and Inkscape
!     StringText=strrep(StringText,'°','&#176;');
!     %StringText=strrep(StringText,'°','&deg;');
!     StringText=strrep(StringText,'±','&plusmn;');
!     StringText=strrep(StringText,'µ','&micro;');
!     StringText=strrep(StringText,'²','&sup2;');
!     StringText=strrep(StringText,'³','&sup3;');
!     StringText=strrep(StringText,'¼','&frac14;');
!     StringText=strrep(StringText,'½','&frac12;');
!     StringText=strrep(StringText,'¾','&frac34;');
!     StringText=strrep(StringText,'©','&copy;');
!     StringText=strrep(StringText,'®','&reg;');
      if any(StringText > 190)
!         StringText=strrep(StringText,'¿','&#191;');
!         StringText=strrep(StringText,'À','&#192;');
!         StringText=strrep(StringText,'Á','&#193;');
!         StringText=strrep(StringText,'Â','&#194;');
!         StringText=strrep(StringText,'Ã','&#195;');
!         StringText=strrep(StringText,'Ä','&#196;');
!         StringText=strrep(StringText,'Å','&#197;');
!         StringText=strrep(StringText,'Æ','&#198;');
!         StringText=strrep(StringText,'Ç','&#199;');
!         StringText=strrep(StringText,'È','&#200;');
!         StringText=strrep(StringText,'É','&#201;');
!         StringText=strrep(StringText,'Ê','&#202;');
!         StringText=strrep(StringText,'Ë','&#203;');
!         StringText=strrep(StringText,'Ì','&#204;');
!         StringText=strrep(StringText,'Í','&#205;');
!         StringText=strrep(StringText,'Î','&#206;');
!         StringText=strrep(StringText,'Ï','&#207;');
!         StringText=strrep(StringText,'Ð','&#208;');
!         StringText=strrep(StringText,'Ñ','&#209;');
!         StringText=strrep(StringText,'Ò','&#210;');
!         StringText=strrep(StringText,'Ó','&#211;');
!         StringText=strrep(StringText,'Ô','&#212;');
!         StringText=strrep(StringText,'Õ','&#213;');
!         StringText=strrep(StringText,'Ö','&#214;');
!         StringText=strrep(StringText,'×','&#215;');
!         StringText=strrep(StringText,'Ø','&#216;');
!         StringText=strrep(StringText,'Ù','&#217;');
!         StringText=strrep(StringText,'Ú','&#218;');
!         StringText=strrep(StringText,'Û','&#219;');
!         StringText=strrep(StringText,'Ü','&#220;');
!         StringText=strrep(StringText,'Ý','&#221;');
!         StringText=strrep(StringText,'Þ','&#222;');
!         StringText=strrep(StringText,'ß','&#223;');
!         StringText=strrep(StringText,'à','&#224;');
!         StringText=strrep(StringText,'á','&#225;');
!         StringText=strrep(StringText,'â','&#226;');
!         StringText=strrep(StringText,'ã','&#227;');
!         StringText=strrep(StringText,'ä','&#228;');
!         StringText=strrep(StringText,'å','&#229;');
!         StringText=strrep(StringText,'æ','&#230;');
!         StringText=strrep(StringText,'ç','&#231;');
!         StringText=strrep(StringText,'è','&#232;');
!         StringText=strrep(StringText,'é','&#233;');
!         StringText=strrep(StringText,'ê','&#234;');
!         StringText=strrep(StringText,'ë','&#235;');
!         StringText=strrep(StringText,'ì','&#236;');
!         StringText=strrep(StringText,'í','&#237;');
!         StringText=strrep(StringText,'î','&#238;');
!         StringText=strrep(StringText,'ï','&#239;');
!         StringText=strrep(StringText,'ð','&#240;');
!         StringText=strrep(StringText,'ñ','&#241;');
!         StringText=strrep(StringText,'ò','&#242;');
!         StringText=strrep(StringText,'ó','&#243;');
!         StringText=strrep(StringText,'ô','&#244;');
!         StringText=strrep(StringText,'õ','&#245;');
!         StringText=strrep(StringText,'ö','&#246;');
!         StringText=strrep(StringText,'÷','&#247;');
!         StringText=strrep(StringText,'ø','&#248;');
!         StringText=strrep(StringText,'ù','&#249;');
!         StringText=strrep(StringText,'ú','&#250;');
!         StringText=strrep(StringText,'û','&#251;');
!         StringText=strrep(StringText,'ü','&#252;');
!         StringText=strrep(StringText,'ý','&#253;');
!         StringText=strrep(StringText,'þ','&#254;');
!         StringText=strrep(StringText,'ÿ','&#255;');
      end
      StringText=deblank(StringText);
  end
--- 2897,2979 ----
      StringText=strrep(StringText,'>','&gt;');
      StringText=strrep(StringText,'"','&quot;');
      % Workaround for Firefox and Inkscape
!     StringText=strrep(StringText,'ï¿½','&#176;');
!     %StringText=strrep(StringText,'ï¿½','&deg;');
!     StringText=strrep(StringText,'ï¿½','&plusmn;');
!     StringText=strrep(StringText,'ï¿½','&micro;');
!     StringText=strrep(StringText,'ï¿½','&sup2;');
!     StringText=strrep(StringText,'ï¿½','&sup3;');
!     StringText=strrep(StringText,'ï¿½','&frac14;');
!     StringText=strrep(StringText,'ï¿½','&frac12;');
!     StringText=strrep(StringText,'ï¿½','&frac34;');
!     StringText=strrep(StringText,'ï¿½','&copy;');
!     StringText=strrep(StringText,'ï¿½','&reg;');
      if any(StringText > 190)
!         StringText=strrep(StringText,'ï¿½','&#191;');
!         StringText=strrep(StringText,'ï¿½','&#192;');
!         StringText=strrep(StringText,'ï¿½','&#193;');
!         StringText=strrep(StringText,'ï¿½','&#194;');
!         StringText=strrep(StringText,'ï¿½','&#195;');
!         StringText=strrep(StringText,'ï¿½','&#196;');
!         StringText=strrep(StringText,'ï¿½','&#197;');
!         StringText=strrep(StringText,'ï¿½','&#198;');
!         StringText=strrep(StringText,'ï¿½','&#199;');
!         StringText=strrep(StringText,'ï¿½','&#200;');
!         StringText=strrep(StringText,'ï¿½','&#201;');
!         StringText=strrep(StringText,'ï¿½','&#202;');
!         StringText=strrep(StringText,'ï¿½','&#203;');
!         StringText=strrep(StringText,'ï¿½','&#204;');
!         StringText=strrep(StringText,'ï¿½','&#205;');
!         StringText=strrep(StringText,'ï¿½','&#206;');
!         StringText=strrep(StringText,'ï¿½','&#207;');
!         StringText=strrep(StringText,'ï¿½','&#208;');
!         StringText=strrep(StringText,'ï¿½','&#209;');
!         StringText=strrep(StringText,'ï¿½','&#210;');
!         StringText=strrep(StringText,'ï¿½','&#211;');
!         StringText=strrep(StringText,'ï¿½','&#212;');
!         StringText=strrep(StringText,'ï¿½','&#213;');
!         StringText=strrep(StringText,'ï¿½','&#214;');
!         StringText=strrep(StringText,'ï¿½','&#215;');
!         StringText=strrep(StringText,'ï¿½','&#216;');
!         StringText=strrep(StringText,'ï¿½','&#217;');
!         StringText=strrep(StringText,'ï¿½','&#218;');
!         StringText=strrep(StringText,'ï¿½','&#219;');
!         StringText=strrep(StringText,'ï¿½','&#220;');
!         StringText=strrep(StringText,'ï¿½','&#221;');
!         StringText=strrep(StringText,'ï¿½','&#222;');
!         StringText=strrep(StringText,'ï¿½','&#223;');
!         StringText=strrep(StringText,'ï¿½','&#224;');
!         StringText=strrep(StringText,'ï¿½','&#225;');
!         StringText=strrep(StringText,'ï¿½','&#226;');
!         StringText=strrep(StringText,'ï¿½','&#227;');
!         StringText=strrep(StringText,'ï¿½','&#228;');
!         StringText=strrep(StringText,'ï¿½','&#229;');
!         StringText=strrep(StringText,'ï¿½','&#230;');
!         StringText=strrep(StringText,'ï¿½','&#231;');
!         StringText=strrep(StringText,'ï¿½','&#232;');
!         StringText=strrep(StringText,'ï¿½','&#233;');
!         StringText=strrep(StringText,'ï¿½','&#234;');
!         StringText=strrep(StringText,'ï¿½','&#235;');
!         StringText=strrep(StringText,'ï¿½','&#236;');
!         StringText=strrep(StringText,'ï¿½','&#237;');
!         StringText=strrep(StringText,'ï¿½','&#238;');
!         StringText=strrep(StringText,'ï¿½','&#239;');
!         StringText=strrep(StringText,'ï¿½','&#240;');
!         StringText=strrep(StringText,'ï¿½','&#241;');
!         StringText=strrep(StringText,'ï¿½','&#242;');
!         StringText=strrep(StringText,'ï¿½','&#243;');
!         StringText=strrep(StringText,'ï¿½','&#244;');
!         StringText=strrep(StringText,'ï¿½','&#245;');
!         StringText=strrep(StringText,'ï¿½','&#246;');
!         StringText=strrep(StringText,'ï¿½','&#247;');
!         StringText=strrep(StringText,'ï¿½','&#248;');
!         StringText=strrep(StringText,'ï¿½','&#249;');
!         StringText=strrep(StringText,'ï¿½','&#250;');
!         StringText=strrep(StringText,'ï¿½','&#251;');
!         StringText=strrep(StringText,'ï¿½','&#252;');
!         StringText=strrep(StringText,'ï¿½','&#253;');
!         StringText=strrep(StringText,'ï¿½','&#254;');
!         StringText=strrep(StringText,'ï¿½','&#255;');
      end
      StringText=deblank(StringText);
  end
***************
*** 3154,3156 ****
--- 3164,3220 ----
  fvc = reshape(c, [cm*cn cp]);
  fva = reshape(a, [am*an ap]);
  f = [q q+m q+m+1 q+1];
+ 
+ %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+ % Find transform, rotate, and scale parameters
+ % from the hgtransform's matrix
+ %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+ function tag = transTagOfMatrix(m3, x_origin, y_origin, x_unit, y_unit)
+ % x_origin,y_origin is the pixel location of hgtransform's 0,0
+ % x_unit, y_unit is the pixel count for unit vectors in hgtransforms coords
+ % m3 is the 3d transformation matrix.  We will only use the first 2 d's.
+ 
+ % Ignore 3rd dimension by dropping 3rd row and col
+ m2 = m3([1,2,4], [1,2,4]); 
+ 
+ 
+ %%%%%%%% Build transform attribute : %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+ [t,r,s] = decompose2dTransformationMatrix(m2);
+ t = [t(1) * x_unit, t(2) * y_unit];
+ reg_trans_tag = sprintf('translate(%f, %f)', -1*x_origin, -1*y_origin);
+ scale_tag = sprintf('scale(%f, %f)', s(1), s(2));
+ rotate_tag = sprintf('rotate(%f, %f, %f)', -1*r*180/pi, x_origin + t(1), y_origin - t(2));
+ user_trans_tag = sprintf('translate(%f, %f)', t(1), -1*t(2));
+ dereg_trans_tag = sprintf('translate(%f, %f)', x_origin, y_origin);
+ 
+ tag = sprintf('transform="%s %s %s %s %s"', ...
+     rotate_tag, dereg_trans_tag, user_trans_tag,  scale_tag, reg_trans_tag);
+ 
+ %%%%%%%% Decompose x-form matrix by subjecting unit vectors %%%%%%%%%
+ %%%%%%%% to it and seeing what happens to them %%%%%%%%%%%%%%%%%%%%%%
+ function [t,r,s] = decompose2dTransformationMatrix(m)
+ 
+ if(~ all(size(m) == [3,3]))
+     error('decompose2dTransformationMatrix:bad_input',...
+         'input should be 3-by-3 matrix');
+ end
+ 
+ orig = m * [0,0,1]';
+ x = m * [1,0,1]';
+ y = m * [0,1,1]';
+ 
+ t = [orig(1), orig(2)];                       % Translation
+ s = [ lfun_dist(x,orig), lfun_dist(y,orig) ]; % scaling
+ r = atan2( x(2) - orig(2), x(1) - orig(1) );  % rotation
+ 
+ r_sanity = atan2( y(2) - orig(2), y(1) - orig(1) );
+ 
+ % For now, I'm assuming there is no shear.  Sheared hgtransforms
+ % Will be totally wrong
+ %if( abs(mod(r_sanity - r, 2*pi) - pi/2) > 0.001 )
+ %    warning('decompose2dTransformationMatrix:funny_result',...
+ %        ['r: ', num2str(r), '  r2: ', num2str(r_sanity)]);
+ %end
+ 
+ function d = lfun_dist(a,b)
+ d = sqrt( (b(1) - a(1)) .^2 + (b(2)-a(2)) .^2 );
\ No newline at end of file
